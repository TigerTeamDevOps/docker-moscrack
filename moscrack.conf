# Moscrack configuration file


### PATHS - This section defines paths to various files and directories
[paths]

# home - This is where Moscrack does all it's work, writes temporary files, etc...
home = /opt/moscrack

# nodeTmp - This is the directory that your nodes use to access Moscrack files
# For 'copy' file mode, this will be a directory local to the node, such as '/tmp'
# For 'shared' file mode, this must be set to the same as 'home' from above
nodeTmp = /tmp

# nodesFile - This is your nodes list/config. A sample is supplied with Moscrack called 'nodes.dat'.
nodesFile = /opt/moscrack/nodes.dat

# logFile - Where Moscrack will write it's log
logFile = /opt/moscrack/moscrack.log

# plugins - Directory containing plugins
plugins = /etc/moscrack/plugins

# capFiles - Directory containing capture files (for moscapid)
capFiles = /opt/moscrack/cap

# wordFiles - Directory containing word list files (for moscapid)
wordFiles = /opt/moscrack/words

### PROGRAMS - External programs that Moscrack uses
[programs]

# mosrun - Used for communication with Mosix nodes. -E is necessary as Moscrack doesn't support MOSIX mode
mosrun = mosrun -E -L

# aircrack - Used to launch aircrack-ng on nodes. If you specify a path, it needs to be the same on all nodes.
aircrack = aircrack-ng

# scp - OpenSSH scp command and args. Used to copy files to ssh and cygssh nodes.
scp = scp -C -B -q

# rcp - RSH copy command and args. Used to copy files to rsh nodes.
rcp = rcp

# rsh - RSH command and args. Used to login to rsh nodes.
rsh = rsh

# tcpdump - tcpdump command and args. Used to validate capture file.
tcpdump = tcpdump

# playAudio - Some command that can play audio for Moscrack notifications
playAudio = /usr/bin/play

# alertAudio - File or argument passed to 'playAudio' for 'alert' level notifications
alertAudio = /usr/share/sounds/gnome/default/alerts/sonar.ogg

### RSH specific settings, affects scp as well
[rsh]

# user - Remote user for rsh and rcp connections. If commented out, defaults to current user.
user = moscrack

# port - Default port for rsh. Only affects tcp status checks, not the actual rsh/rcp commands.
port = 514

### SSH configuration values for Moscrack
[ssh]

# debug - Print SSH debugging messages
debug = 0

# user - User name to use for SSH nodes. If commented out, it defaults to the current user.
user = cloud

# privateKey - Your ssh private key, used to access ssh nodes
privateKey = /root/.ssh/id_rsa

# publicKey - Your ssh public key, matching pair to privateKey above (required by moscd)
publicKey = /root/.ssh/id_rsa.pub

# port - Default ssh port to use, affects ssh, scp and tcp status checks. 
port = 22

### MOSCRACK - Moscrack internal settings
[moscrack]

# validateCaputre - Uses tcpdump to read your capture file and attempt to verify that it contains appropriate
#                   ESSID and handshake packages. 1 = on, 0 = off. Requires programs->tcpdump is defined.
validateCapture = 1


# chunkSize - This is the minimum number of words that constitute a chunk. Nodes process one chunk at a time
#             unless a multiplier is set for that node. If a multiplier is set, they process 
#	      chunkSize multiplied by their muliplier setting. 100000 seems to keep most dual-core systems busy 
#	      for about 5 minutes. See the README for details on performance and tuning.
chunkSize = 100000

# autoChunkSize - Have Moscrack automatically set your chunk size based on time 1 or 0. Overrides "chunkSize".
#		  You must define autoChunkSizeTime below as well for this to work.
autoChunkSize = 1

# autoChunkSizeTime - Number of seconds allowed for chunk processing. This is how long you want your nodes to be 
#		      busy processing a chunk. They will take approximately this long + overhead.
#		      Auto chunk size is calculated based on this combined with the speed of your slowest node.
autoChunkSizeTime = 300

# oneShot - Automatically set the chunk size so that all nodes only get a chunk once. i.e. the whole word list
#	    is processed in one shot. This will result in a very large chunk size for large word lists.
#	    Not recommended unless you are sure you know what you are doing. Large chunks amplify some types
#	    of errors/failures/etc... Moscrack will also be unable to provide you with any feedback/results 
#	    until nodes finish, which will take longer.
#	    Set this to 1 or 0
oneShot = 0

# useAllNodes - Force using all nodes 1 or 0. Automaticaly reduces your chunkSize if it would othewise prohibit
#		all nodes from being used. This is useful for when the word list size is small relative to the cluster.
#		This will not make things faster if 1 node can process the whole word list in a few seconds, it
#		will actually make things slower due to the overhead.
useAllNodes = 1

# throttleFail - Throttle a node (put it on hold) after this many consecutive status failures or execution errors
throttleFail = 3

# throttleTime - How long a node will be throttled for in seconds 
throttleTime = 180

# fileMode - How nodes get files from Moscrack. Possible values are 'copy' or 'shared'
# For 'copy', files are copied to the node and then processed
# For 'shared', files are accessed over shared storage like SMB/NFS, etc...
# The easier mode to use is 'copy' because it requires no extra configuration.
# See the README for more details on file modes
filemode = copy

# hangDetect - Detect hung nodes 1 or 0. PIDs are killed if they take longer than expected.
# Do not enable if any of your nodes have inconsistent performance e.g virtual machines, busy servers, etc...
hangDetect = 1

# hangDetectOverhead - Number of seconds to permit for overhead (DNS resolution, login, file copy, etc...)
hangDetectOverhead = 60

# hangDetectTolerance - How long a node can take before detected as hung. Multiple of estimated completion time
#			<est. completion time> * <tolerance> = <detect time>
# If the node would take 300 seconds to process + 60 seconds overhead, it would be 360 seconds * <tolerance>
# If tolerance = 2, you get 720 seconds before a PID is killed by hang detection
# Decimals are accepted (1.5 would work)
hangDetectTolerance = 2


### MOSCD - moscd specific settings. Only applies if you use moscd/moscc for dynamic node configuration.
[moscd]

# leaseTime - when a nodes entry is set to expire in seconds. <now> + <leaseTime> = <expire time>. 
# Default is 14400 / 4 hours
leaseTime = 14400

# leaseRenew - seconds before lease exipres that updates from a valid node are allowed in order to renew/update it's lease
# Update attempts before this time do not affect nodes.dat
# Default is 900 / 15 minutes
leaseRenew = 900

### MOSCAPID - moscapid specific settings. This section must exist on any system that uses moscapid.
[moscapid]

# Enable (1) or disable (0) moscd support for client applications like mosctop, moscrack.cgi, etc...
# Some of these application will work without moscapid, some require it
enabled = 1

# URL to access moscapid e.g. http://localhost:8080/api
url = http://localhost:8080/api

# Port that moscapid will bind to
port = 8080
 
# Path to moscrack executable
moscrack = /opt/moscrack
 
# Log file for moscapid
 log = /var/log/moscapid.log

### This section is used by the pyrit plugin
[pyrit_plugin]

# Pyrit command and args
pyrit = pyrit

### This section is used by the dehasher plugin
[dehasher_plugin]

# dehasher command and args
dehasher = dehasher

